#nullable enable
Microsoft.Azure.StackExchangeRedis.AzureCacheOptions.CancellationToken -> System.Threading.CancellationToken
Microsoft.Azure.StackExchangeRedis.AzureCacheOptions.TokenCredential -> Azure.Core.TokenCredential?
Microsoft.Azure.StackExchangeRedis.IAzureCacheTokenEvents.TokenRefreshed -> System.EventHandler<Microsoft.Azure.StackExchangeRedis.TokenResult!>?
Microsoft.Azure.StackExchangeRedis.IAzureCacheTokenEvents.TokenRefreshFailed -> System.EventHandler<Microsoft.Azure.StackExchangeRedis.TokenRefreshFailedEventArgs!>?
Microsoft.Azure.StackExchangeRedis.TokenResult
Microsoft.Azure.StackExchangeRedis.TokenResult.ExpiresOn.get -> System.DateTimeOffset
Microsoft.Azure.StackExchangeRedis.TokenResult.ExpiresOn.set -> void
Microsoft.Azure.StackExchangeRedis.TokenResult.Token.get -> string!
Microsoft.Azure.StackExchangeRedis.TokenResult.Token.set -> void
Microsoft.Azure.StackExchangeRedis.TokenResult.TokenResult(Azure.Core.AccessToken accessToken) -> void
Microsoft.Azure.StackExchangeRedis.TokenResult.TokenResult(Microsoft.Identity.Client.AuthenticationResult! authenticationResult) -> void
Microsoft.Azure.StackExchangeRedis.TokenResult.TokenResult(string! token, System.DateTimeOffset expiresOn) -> void
static StackExchange.Redis.AzureCacheForRedis.ConfigureForAzureWithTokenCredentialAsync(this StackExchange.Redis.ConfigurationOptions! configurationOptions, string! principalId, Azure.Core.TokenCredential! tokenCredential, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<StackExchange.Redis.ConfigurationOptions!>!
